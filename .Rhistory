date_prob <- (date_seq %>%
lubridate::wday()) %in% c(1,7) %>%
if_else(., 0.3, 0.7)
ride_date <- sort(sample(date_seq,
size = 20000,
replace = TRUE,
prob = date_prob))
rideTable <- 1:20000 %>%
map(function(x) {
spots <- sample(nrow(locs), 2, replace = FALSE)
data.frame(origin = spots[1],
destination = spots[2],
driver = sample(drivers$pid, 1),
rider = sample(allNames$passengers$pid, 1))
}) %>%
bind_rows() %>%
mutate(date = ride_date,
rideid = 1:20000)
sents <- sentimentr::combine_data("hotel_reviews") %>% select(text) %>% lapply(function(x)strsplit(x, ".")) %>% unlist()
sents <- sents[nchar(sents) > 10]
rateobj <- data.frame(rdid = c(1,2),
rated = c("Passenger", "Driver"))
ratings <- data.frame(rideid = rep(1:20000, 2),
rdid  = rep(1:2, each = 20000),
assigned = runif(40000, 0, 1),
rating = sample(5,40000, replace = TRUE, prob = ppois(1:5, 3)),
comments = NA)
ratings$comments[ratings$assigned > .9] <- sents[sample(1:length(sents),
sum(ratings$assigned > .9),
replace = TRUE)]
ratings <- ratings %>%
filter((rdid == 1 & assigned < .8) | (rdid == 2 & assigned < .6)) %>%
select(-assigned)
# Note: With all this repetition we should make a function.
if (!dbExistsTable(con, "drivers")) {
dbWriteTable(con, "drivers", drivers,
row.names = FALSE)
}
if (!dbExistsTable(con, "passengers")) {
dbWriteTable(con, "passengers",
allNames$passengers,
row.names = FALSE)
}
if (!dbExistsTable(con, "dispatchers")) {
dbWriteTable(con,
"dispatchers",
allNames$dispatchers,
row.names = FALSE)
}
if(!dbExistsTable(con, "places")) {
aa <- try(dbExecute(con, "CREATE EXTENSION postgis;"))
dbWriteTable(con,
"places",
locs,
row.names = FALSE)
}
if (!dbExistsTable(con, "rides")) {
dbWriteTable(con, "rides", rideTable,
row.names = FALSE)
}
if (!dbExistsTable(con, "model")) {
dbWriteTable(con, "model", car_make,
row.names = FALSE)
}
if (!dbExistsTable(con, "cars")) {
dbWriteTable(con, "cars", cars,
row.names = FALSE)
}
if (!dbExistsTable(con, "ratings")) {
dbWriteTable(con, "ratings", ratings,
row.names = FALSE)
}
if (!dbExistsTable(con, "rateobj")) {
dbWriteTable(con, "rateobj", rateobj,
row.names = FALSE)
}
dbDisconnect(con)
places
no_cars <- 2100
car_make <- data.frame(modelid = 1:4,
make = c("Ford", "Fiat",
"SAIC", "Tata"),
model = c("Fiesta", "500",
"Roewe", "Tigor"),
stringsAsFactors = FALSE)
lsa <- function(x) { sample(letters, x,
replace = TRUE) }
nsa <- function(x) { sample(0:9, x, replace = TRUE) }
cars <- data.frame(carid = 1:no_cars,
modelid = sample(car_make$modelid,
2100,
replace = TRUE),
license = paste0(lsa(2100),
nsa(2100),
lsa(2100),
nsa(2100),
lsa(2100),
nsa(2100)))
if (!dir.exists("data/vanhoods/")) {
if (!dir.exists("data")) {
dir.create("data") #create a folder in directory
}
dir.create("data/vanhoods")
}
if (!file.exists("data/vanhoods/")) {
download.file("ftp://webftp.vancouver.ca/OpenData/shape/local_area_boundary_shp.zip",
"data/vanhoods/local_area_boundary_shp.zip")
unzip("data/vanhoods/local_area_boundary_shp.zip",
exdir = "data/vanhoods")
}
if (!dir.exists("data/vanhoods/")) {
if (!dir.exists("data")) {
dir.create("data") #create a folder in directory
}
dir.create("data/vanhoods")
}
if (!file.exists("data/vanhoods/")) {
download.file("ftp://webftp.vancouver.ca/OpenData/shape/local_area_boundary_shp.zip",
"data/vanhoods/local_area_boundary_shp.zip")
unzip("data/vanhoods/local_area_boundary_shp.zip",
exdir = "data/vanhoods")
}
places <- sf::st_read("data/vanhoods/local_area_boundary.shp")
knitr::opts_chunk$set(echo = TRUE)
#Load PostgreSQL, knitr, dplyr
library(RPostgreSQL)
library(knitr)
library(dplyr)
library(ggplot2)
file_clean_na <- "data/clean_na.csv"
file_cna <- read.csv(file_clean_na, header = TRUE)
total_row1 <- nrow(file_cna)
total_col1 <- ncol(file_cna)
colnames(file_cna)
glimpse(file_cna)
city_summary <- file_cna %>%
group_by(city) %>%
count()
nrow(city_summary)
uniq_city <- unique(file_cna$city)
head(uniq_city, 10)
tail(uniq_city,10)
state_summary <- file_cna %>%
group_by(state) %>%
count()
nrow(state_summary)
head(state_summary)
tail(state_summary)
cancel_summary <- file_cna %>%
group_by(cancellation.policy) %>%
summarise(cancel_pol = n()) %>%
arrange(desc = cancel_pol) %>%
head()
#barplot(cancel_summary$cancel_pol,
#xlab = 'Cancelation Policy',
#ylab = 'Total')
#axis(side = 1, at = seq_along(cancel_summary$cancel_pol)  - 0.5, tick = FALSE, labels = cancel_summary$cancellation.policy)
ggplot(cancel_summary, aes(x = cancel_summary$cancellation.policy, y = cancel_summary$cancel_pol)) + geom_col()
uniq_type <- file_cna %>%
group_by(property.type) %>%
summarise(proper_type = n()) %>%
arrange(desc(proper_type)) %>%
head(10)
ggplot(uniq_type, aes(x = uniq_type$property.type, y = uniq_type$proper_type)) +
geom_col() + theme(axis.text.x = element_text(angle = 90)) +geom_text(aes(label=proper_type), position=position_dodge(width=0.9), vjust=-0.25)
# Count the number of rows in price column that has NA
sum(is.na(file_cna$price))
#Create a new data frame that exclude Price == NA
file_cna2 <- file_cna[!is.na(file_cna$price),]
row_substracted <- nrow(file_cna) - nrow(file_cna2)
row_substracted
file_cna2$host.since <- as.Date(file_cna2$host.since, format = '%Y-%m-%d')
file_cna2$first.review <- as.Date(file_cna2$first.review, format = '%Y-%m-%d')
file_cna2$last.review <- as.Date(file_cna2$last.review, format = '%Y-%m-%d')
file_cna2$calendar.last.scraped <- as.Date(file_cna2$calendar.last.scraped, format = '%Y-%m-%d')
#remove 5-experience offered
#remove 14-host verification
#remove 16-neighborhoos.cleansed
#remove 17-Neighborhood.group cleansed
#remove 22-smart location
#remove 24-country.country code already exist.
#remove 40-cleaning fee
#remove 66-geolocation(data already contain longitude and latitude)
col_remove <- c(5, 14, 16, 17, 22, 24, 40, 66)
file_cna3 <- file_cna2[-col_remove]
#file price in different zipcode
zip_price_avg_ca <- file_cna3 %>%
filter(country.code == 'CA') %>%
group_by(zipcode)%>%
summarise(avg_price = mean(price)) %>%
arrange(desc(avg_price))
zip_price_avg_us <- file_cna3 %>%
filter(country.code == 'US') %>%
group_by(zipcode)%>%
summarise(avg_price = mean(price)) %>%
arrange(desc(avg_price))
colnames(file_cna3)
file_cna2
colnames(file_cna2)
sum(unique(file_cna3$scrape.id))
nrows(uniqe(file_cna3$scrape.id))
nrow(uniqe(file_cna3$scrape.id))
nrows(unique(file_cna3$scrape.id))
nrow(unique(file_cna3$scrape.id))
colnames(file_cna3)
unique_key <- file_cna3 %>%
nrow(distinct(scrape.id))
unique_key <- file_cna3 %>%
distinct(scrape.id)
unique_key
unique_key
unique_key <- file_cna3 %>%
distinct(host.id) %>%
nrow
unique_key
print(unique_key)
unique_key2 <- file_cna3 %>%
distinct(x) %>%
nrow
print(unique_key2)
unique_key2 <- file_cna3 %>%
distinct(x) %>%
nrow
colnames(file_cna3$X) <- 'unique_id'
colnames(file_cna3$X) <- c('unique_id')
unique_key2 <- file_cna3 %>%
distinct(x) %>%
nrow
print(unique_key2)
unique_key2 <- file_cna3 %>%
distinct(x) %>%
nrow
uniq_city
montreal_replace <- file_cna3 %>%
flter(city == 'MontrÃ©al')
montreal_replace <- file_cna3 %>%
filter(city == 'MontrÃ©al')
montreal_replace
nrow(montreal_replace)
montreal_replace <- file_cna3 %>%
filter(city == 'MontrÃ©al')
montreal_replace
file_cna3[file_cna3$city == 'MontrÃ©al'] <- 'montreal'
file_cna3[city == 'MontrÃ©al'] <- 'montreal'
file_cna3[file_cna3$city == 'MontrÃ©al'] <- 'montreal'
file_cna3$city$MontrÃ©al
not_montreal <- file_cna3$city$MontrÃ©al
file_cna3$city['MontrÃ©al']
colnames(file_cna3)
file_cna2
colnames(file_cna2)
#remove 5-experience offered
#remove 14-host verification
#remove 16-neighborhoos.cleansed
#remove 17-Neighborhood.group cleansed
#remove 22-smart location
#remove 24-country.country code already exist.
#remove 40-cleaning fee
#remove 66-geolocation(data already contain longitude and latitude)
col_remove <- c(5, 14, 16, 17, 22, 24, 34, 40, 66)
file_cna3
colnames(file_cna3)
replace_montreal <- file_cna3 %>%
filter(city = 'MontrÃ©al')
replace_montreal <- file_cna3 %>%
filter(city == 'MontrÃ©al')
replace_montreal <- file_cna3 %>%
filter(city == 'MontrÃ©al') %>%
mutate(city = 'montreal')
rreplace_montreal
replace_montreal
colnames(file_cna3)
colnames(file_cna2)
#remove 5-experience offered
#remove 14-host verification
#remove 16-neighborhoos.cleansed
#remove 17-Neighborhood.group cleansed
#remove 22-smart location
#remove 24-country.country code already exist.
#remove 34
#remove 40-cleaning fee
#remove 66-geolocation(data already contain longitude and latitude)
col_remove <- c(5, 14, 16, 17, 22, 24, 34, 40, 66)
file_cna3 <- file_cna2[-col_remove]
colnames(file_cna3)
replace_montreal
unique(file_cna3$city)
replace_montreal <- file_cna3 %>%
filter(city == 'MontrÃ©al') %>%
mutate(city = 'montreal')
replace_montreal <- file_cna3 %>%
filter(city == 'MontrÃ©al') %>%
replace_montreal
replace_montreal <- file_cna3 %>%
filter(city == 'MontrÃ©al') #%>%
replace_montreal
replace_montreal <- file_cna3 %>%
filter(city == 'MontrÃ©al') %>%
mutate(city = 'montreal')
replace_montreal
replace(file_cna3, file_cna3$city == 'MontrÃ©al', montreal)
replace(file_cna3, file_cna3$city == 'MontrÃ©al', 'montreal')
replace(file_cna3, city == 'MontrÃ©al', 'montreal')
file_cna3 <- file_cna3 %>%
filter(city == 'MontrÃ©al') %>%
mutate(city = 'montreal')
knitr::opts_chunk$set(echo = TRUE)
#Load PostgreSQL, knitr, dplyr
library(RPostgreSQL)
library(knitr)
library(dplyr)
library(ggplot2)
file_clean_na <- "data/clean_na.csv"
file_cna <- read.csv(file_clean_na, header = TRUE)
total_row1 <- nrow(file_cna)
total_col1 <- ncol(file_cna)
colnames(file_cna)
glimpse(file_cna)
city_summary <- file_cna %>%
group_by(city) %>%
count()
nrow(city_summary)
uniq_city <- unique(file_cna$city)
head(uniq_city, 10)
tail(uniq_city,10)
state_summary <- file_cna %>%
group_by(state) %>%
count()
nrow(state_summary)
head(state_summary)
tail(state_summary)
cancel_summary <- file_cna %>%
group_by(cancellation.policy) %>%
summarise(cancel_pol = n()) %>%
arrange(desc = cancel_pol) %>%
head()
#barplot(cancel_summary$cancel_pol,
#xlab = 'Cancelation Policy',
#ylab = 'Total')
#axis(side = 1, at = seq_along(cancel_summary$cancel_pol)  - 0.5, tick = FALSE, labels = cancel_summary$cancellation.policy)
ggplot(cancel_summary, aes(x = cancel_summary$cancellation.policy, y = cancel_summary$cancel_pol)) + geom_col()
uniq_type <- file_cna %>%
group_by(property.type) %>%
summarise(proper_type = n()) %>%
arrange(desc(proper_type)) %>%
head(10)
ggplot(uniq_type, aes(x = uniq_type$property.type, y = uniq_type$proper_type)) +
geom_col() + theme(axis.text.x = element_text(angle = 90)) +geom_text(aes(label=proper_type), position=position_dodge(width=0.9), vjust=-0.25)
# Count the number of rows in price column that has NA
sum(is.na(file_cna$price))
#Create a new data frame that exclude Price == NA
file_cna2 <- file_cna[!is.na(file_cna$price),]
row_substracted <- nrow(file_cna) - nrow(file_cna2)
row_substracted
file_cna2$host.since <- as.Date(file_cna2$host.since, format = '%Y-%m-%d')
file_cna2$first.review <- as.Date(file_cna2$first.review, format = '%Y-%m-%d')
file_cna2$last.review <- as.Date(file_cna2$last.review, format = '%Y-%m-%d')
file_cna2$calendar.last.scraped <- as.Date(file_cna2$calendar.last.scraped, format = '%Y-%m-%d')
#remove 5-experience offered
#remove 14-host verification
#remove 16-neighborhoos.cleansed
#remove 17-Neighborhood.group cleansed
#remove 22-smart location
#remove 24-country.country code already exist.
#remove 34
#remove 40-cleaning fee
#remove 66-geolocation(data already contain longitude and latitude)
col_remove <- c(5, 14, 16, 17, 22, 24, 34, 40, 66)
file_cna3 <- file_cna2[-col_remove]
#file price in different zipcode
zip_price_avg_ca <- file_cna3 %>%
filter(country.code == 'CA') %>%
group_by(zipcode)%>%
summarise(avg_price = mean(price)) %>%
arrange(desc(avg_price))
zip_price_avg_us <- file_cna3 %>%
filter(country.code == 'US') %>%
group_by(zipcode)%>%
summarise(avg_price = mean(price)) %>%
arrange(desc(avg_price))
unique_key <- file_cna3 %>%
distinct(host.id) %>%
nrow
print(unique_key)
unique_key2 <- file_cna3 %>%
distinct(x) %>%
nrow
print(unique_key2)
#file_cna3 <- file_cna3 %>%
#filter(city == 'MontrÃ©al') %>%
#mutate(city = 'montreal')
knitr::opts_chunk$set(echo = TRUE)
#Load PostgreSQL, knitr, dplyr
library(RPostgreSQL)
library(knitr)
library(dplyr)
library(ggplot2)
file_clean_na <- "data/clean_na.csv"
file_cna <- read.csv(file_clean_na, header = TRUE)
total_row1 <- nrow(file_cna)
total_col1 <- ncol(file_cna)
colnames(file_cna)
glimpse(file_cna)
city_summary <- file_cna %>%
group_by(city) %>%
count()
nrow(city_summary)
uniq_city <- unique(file_cna$city)
head(uniq_city, 10)
tail(uniq_city,10)
state_summary <- file_cna %>%
group_by(state) %>%
count()
nrow(state_summary)
head(state_summary)
tail(state_summary)
cancel_summary <- file_cna %>%
group_by(cancellation.policy) %>%
summarise(cancel_pol = n()) %>%
arrange(desc = cancel_pol) %>%
head()
#barplot(cancel_summary$cancel_pol,
#xlab = 'Cancelation Policy',
#ylab = 'Total')
#axis(side = 1, at = seq_along(cancel_summary$cancel_pol)  - 0.5, tick = FALSE, labels = cancel_summary$cancellation.policy)
ggplot(cancel_summary, aes(x = cancel_summary$cancellation.policy, y = cancel_summary$cancel_pol)) + geom_col()
uniq_type <- file_cna %>%
group_by(property.type) %>%
summarise(proper_type = n()) %>%
arrange(desc(proper_type)) %>%
head(10)
ggplot(uniq_type, aes(x = uniq_type$property.type, y = uniq_type$proper_type)) +
geom_col() + theme(axis.text.x = element_text(angle = 90)) +geom_text(aes(label=proper_type), position=position_dodge(width=0.9), vjust=-0.25)
# Count the number of rows in price column that has NA
sum(is.na(file_cna$price))
#Create a new data frame that exclude Price == NA
file_cna2 <- file_cna[!is.na(file_cna$price),]
row_substracted <- nrow(file_cna) - nrow(file_cna2)
row_substracted
file_cna2$host.since <- as.Date(file_cna2$host.since, format = '%Y-%m-%d')
file_cna2$first.review <- as.Date(file_cna2$first.review, format = '%Y-%m-%d')
file_cna2$last.review <- as.Date(file_cna2$last.review, format = '%Y-%m-%d')
file_cna2$calendar.last.scraped <- as.Date(file_cna2$calendar.last.scraped, format = '%Y-%m-%d')
#remove 5-experience offered
#remove 14-host verification
#remove 16-neighborhoos.cleansed
#remove 17-Neighborhood.group cleansed
#remove 22-smart location
#remove 24-country.country code already exist.
#remove 34
#remove 40-cleaning fee
#remove 66-geolocation(data already contain longitude and latitude)
col_remove <- c(5, 14, 16, 17, 22, 24, 34, 40, 66)
file_cna3 <- file_cna2[-col_remove]
#file price in different zipcode
zip_price_avg_ca <- file_cna3 %>%
filter(country.code == 'CA') %>%
group_by(zipcode)%>%
summarise(avg_price = mean(price)) %>%
arrange(desc(avg_price))
zip_price_avg_us <- file_cna3 %>%
filter(country.code == 'US') %>%
group_by(zipcode)%>%
summarise(avg_price = mean(price)) %>%
arrange(desc(avg_price))
unique_key <- file_cna3 %>%
distinct(host.id) %>%
nrow
print(unique_key)
unique_key2 <- file_cna3 %>%
distinct(x) %>%
nrow
print(unique_key2)
#file_cna3 <- file_cna3 %>%
#filter(city == 'MontrÃ©al') %>%
#mutate(city = 'montreal')
```{}
price_v_ratings <- file_cna3 %>%
group_by(price, ratings) #%>%
price_v_ratings <- file_cna3 %>%
group_by(price, ratings) #%>%
unique(file_cna3$)
colnames(file_cna3)
price_v_ratings <- file_cna3 %>%
group_by(price, review.scores.rating) #%>%
price_v_ratings
price_v_ratings <- file_cna3 %>%
group_by(price, review.scores.rating) #%>%
ggplot(price_v_ratings, aes(x = price_v_ratings$price, y = price_v_ratings$review.scores.rating )) + geom_point()
price_v_ratings_us <- file_cna3 %>%
filter(country.code == 'US' )
ggplot(price_v_ratings, aes(x = price_v_ratings$price, y = price_v_ratings$review.scores.rating )) + geom_point()
group_by(price, review.scores.rating) #%>%
price_v_ratings_ca <- file_cna3 %>%
filter(country.code == 'US' )
ggplot(price_v_ratings, aes(x = price_v_ratings$price, y = price_v_ratings$review.scores.rating )) + geom_point()
price_v_ratings_ca <- file_cna3 %>%
filter(country.code == 'CA' ) %>%
group_by(price, review.scores.rating) %>%
ggplot(price_v_ratings, aes(x = price_v_ratings$price, y = price_v_ratings$review.scores.rating )) + geom_point()
price_v_ratings_ca <- file_cna3 %>%
filter(country.code == 'CA' ) %>%
group_by(price, review.scores.rating)
ggplot(price_v_ratings, aes(x = price_v_ratings$price, y = price_v_ratings$review.scores.rating )) + geom_point()
price_v_ratings_ca <- file_cna3 %>%
filter(country.code == 'CA' ) %>%
group_by(price, review.scores.rating)
price_v_ratings_ca <- file_cna3 %>%
filter(country.code == 'US' ) %>%
group_by(price, review.scores.rating)
ggplot(price_v_ratings, aes(x = price_v_ratings$price, y = price_v_ratings$review.scores.rating )) + geom_point()
colnames(file_cna3)
